const axios = require('axios');

let servicesState = {};

const checkServices = async (services) => {
    const results = await Promise.all(
        services.map(async (service) => {
            try {
                const response = await axios.get(service.url);
                if (response.status === 200) {
                    return { name: service.name, available: true };
                } else {
                    return { name: service.name, available: false };
                }
            } catch (error) {
                return { name: service.name, available: false };
                console.log('–≤–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –Ω–µ –±—É–ª–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ–¥ —Å–µ—Ä–≤–µ—Ä–∞')
            }
        })
    );
    return results;
};

const checkResult = async (results) => {

    let hasError = false;
    for (const result of results) {
        console.log('–ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å–µ—Ä–≤—ñ—Å', result.name);
        if (isServiceChanged(result.name)) {
            message = result.available ? `‚úÖ –°–µ—Ä–≤—ñ—Å "${result.name}" –≤—ñ–¥–Ω–æ–≤–∏–≤—Å—è.` : `‚ö†Ô∏è –°–µ—Ä–≤—ñ—Å "${result.name}" –Ω–µ –ø—Ä–∞—Ü—é—î. üî¥‚ùó‚ùå`;
            await sendTelegramMessage(message);
        }

    }
    if (hasStateChanged) {
        message = createMessage(results);
        initialMessageId = await sendTelegramMessage(message);
    }
};

module.exports = { checkServices, checkResult };
